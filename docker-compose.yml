version: "3.3"
services:
    zookeeper:
        image: wurstmeister/zookeeper
        ports: ["2181:2181"]
        environment:
            ZOOKEEPER_CLIENT_PORT: "2181"
            ZOOKEEPER_TICK_TIME: "50000"
            ZOOKEEPER_SYNC_LIMIT: "20" 
        networks: [kafka]
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.labels.type == kafka] 
            restart_policy: 
                condition: on-failure
                delay: 10s 
                max_attempts: 10
                window: 120s
    broker:
        image: wurstmeister/kafka
        ports: ["9092:9092"]
        environment:
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            HOSTNAME_COMMAND: "curl -H 'Metadata-Flavor:Google' http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9099,OUTSIDE://_{HOSTNAME_COMMAND}:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
            KAFKA_LISTENERS: PLAINTEXT://:9099,OUTSIDE://:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        depends_on:
            - zookeeper
        networks: [kafka]
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.labels.type == kafka] 
            restart_policy: 
                condition: on-failure
                delay: 10s 
                max_attempts: 10
                window: 120s 
    schema_registry:
        image: confluentinc/cp-schema-registry
        ports: ["9090:9090"]
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
            SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:9090"
            SCHEMA_REGISTRY_HOST_NAME: "schema_registry"
        depends_on:
            - zookeeper
        networks: [kafka]
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.labels.type == kafka] 
            restart_policy: 
                condition: on-failure
                delay: 10s 
                max_attempts: 10
                window: 120s 
    kafka_rest:
        image: confluentinc/cp-kafka-rest
        ports: ["9091:9091"]
        environment:
            KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_REST_LISTENERS: "http://0.0.0.0:9091"
            KAFKA_REST_HOST_NAME: "kafka_rest"
            KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema_registry:9090"
        depends_on:
            - zookeeper
            - schema_registry
        networks: [kafka]
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.labels.type == kafka] 
            restart_policy: 
                condition: on-failure
                delay: 10s 
                max_attempts: 10
                window: 120s 
    kafka_control_center:
        image: confluentinc/cp-enterprise-control-center
        ports: ["9021:9021"]
        hostname: kafka_control_center
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:9092"
            CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
            CONTROL_CENTER_KSQL_ENDPOINT: "http://kafka_ksql:9023"
            CONTROL_CENTER_KSQL_URL: "http://kafka_ksql:9023"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper
            - broker
            - kafka_ksql
        ulimits:
            nofile:
                soft: 16384
                hard: 16384
        networks: [kafka]
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.labels.type == kafka] 
            restart_policy: 
                condition: on-failure
                delay: 10s 
                max_attempts: 10
                window: 360s 
    kafka_ksql:
        image: confluentinc/cp-ksql-server
        ports: ["9023:9023"]
        hostname: kafka_ksql
        environment:
            KSQL_BOOTSTRAP_SERVERS: "broker:9092"
            KSQL_KSQL_SERVICE_ID: "confluent_kite_ksql"
            KSQL_LISTENERS: http://0.0.0.0:9023
            KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema_registry:9090"
        depends_on:
            - zookeeper
            - broker
            - schema_registry
        networks: [kafka]
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.labels.type == kafka] 
            restart_policy: 
                condition: on-failure
                delay: 10s 
                max_attempts: 10
                window: 360s 
networks:
    kafka:
        external: true
